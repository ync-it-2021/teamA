<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.ync.mapper.MemberMapper">

	<resultMap type="kr.ac.ync.domain.MemberVO" id="memberMap">
		<id property="member_id" column="member_id"/>
		<result property="member_id" column="member_id"/>
		<result property="member_pass" column="member_pass"/>
		<result property="member_name" column="member_name"/>
		<result property="member_birthday" column="member_birthday"/>
		<result property="member_email" column="member_email"/>
		<result property="member_phone" column="member_phone"/>
		<result property="member_address" column="member_address"/>
		<result property="member_mileage" column="member_mileage"/>
		<result property="member_grade" column="member_grade"/>
		<collection property="authList" resultMap="authMap">
		</collection> 
	</resultMap>
	
	<resultMap type="kr.ac.ync.domain.AuthVO" id="authMap">
		<result property="member_id" column="member_id"/>
		<result property="auth" column="auth"/>
	</resultMap>

<!--회원 검색 출력-->
		<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'N'.toString()">
							member_name LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'B'.toString()">
							member_birthday LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'M'.toString()">
							member_id LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'A'.toString()">
							member_address LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'P'.toString()">
							member_phone LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'G'.toString()">
							member_grade LIKE '%'||#{keyword}||'%'
						</when>
						<when test="type == 'E'.toString()">
							member_email LIKE '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<!--회원 상세 정보 출력-->
	<select id="read" resultMap="memberMap">
	SELECT	member_id,
			member_name,
			member_email,
			member_pass,
			member_phone,
			member_birthday,
			member_address,
			member_mileage,
			member_grade,
			auth
	FROM	member
	WHERE	member_id = #{member_id} 
	</select>
	
	<!-- 아이디 체크 -->
	<select id="id_Check" resultType="int">
  		select count(*) from member where member_id = #{member_id}
  	</select>
  	
  	<!-- 아이디 체크 -->
	<select id="pass_check" resultType="int">
 		SELECT COUNT(*) FROM member WHERE member_id LIKE #{member_id} AMD member_pass LIKE #{member_pass}
  	</select>
  	
  	<!-- 이메일 찾기 -->
  	<select id="member_idsearch_email" resultType="String">
  		select member_ID from member where member_name = #{member_name} AND member_email = #{member_email}
  	
  	</select>
  	
  	<!-- 핸드폰 찾기 -->
  	<select id="member_idsearch_phone" resultType="String">
  		select member_ID  from member where member_name = #{member_name} AND member_phone = #{member_phone}
  	
  	</select>
  	
  	<!-- 이메일 비밀번호 찾기 -->
  	<select id="member_passsearch_email" resultType="String">
  		select member_ID from member where member_id = #{member_id} AND member_name = #{member_name} AND member_email = #{member_email}
  	
  	</select>
  	
  	<!-- 핸드폰 비밀번호 찾기 -->
  	<select id="member_passsearch_phone" resultType="String">
  		select member_ID  from member where member_id = #{member_id} AND member_name = #{member_name} AND member_phone = #{member_phone}
  	
  	</select>
  	
  
	<update id="member_passsearch_email_update">
  		update  member set member_pass = #{member_pass} where member_id = #{member_id} AND member_name = #{member_name} AND member_email = #{member_email}
  	
  	</update>
  	
  	<update id="member_passsearch_phone_update">
  		update  member set member_pass = #{member_pass} where member_id = #{member_id} AND member_name = #{member_name} AND member_phone = #{member_phone}
  	
  	</update>
	<!--페이징 회원 출력-->
	<select id="getListWithPaging" resultType="kr.ac.ync.domain.MemberVO">
		<![CDATA[
		SELECT	member_id,
				member_name,
				member_email,
				member_phone,
				member_birthday,
				member_address,
				member_mileage,
				member_grade
		FROM	(SELECT /*+INDEX_DESC(member XPKMEMBER ) */
        				rownum rn,
        				member_id,
						member_name,
						member_email,
						member_phone,
						member_birthday,
						member_address,
						member_mileage,
						member_grade
      			FROM	member
				WHERE 
  		]]>
		<include refid="criteria"></include> 
      
		<![CDATA[    
      			rownum <= #{pageNum} * #{amount}
      			)
  		WHERE rn > (#{pageNum} -1) * #{amount}   
		]]>
	</select>
	<!--회원 전체수 출력-->
	<select id="getTotal" resultType="int">
		SELECT count(*) FROM member
		<include refid="criteria"></include>
		
	</select>
	<!--회원 추가-->
	
	<insert id="insertSelectKey">
		INSERT INTO member (member_id,
							member_name,
							member_pass,
							member_email,
							member_phone,
							member_birthday,
							member_grade,  
							member_address,
							auth
							 )
					VALUES (#{member_id},
							#{member_name},
							#{member_pass},
							#{member_email},
							#{member_phone},
							#{member_birthday},
							#{member_grade},
							#{member_address},
							#{auth,jdbcType=VARCHAR})
	</insert>
	<!--회원 정보 수정-->
	<update id="update">
		UPDATE 	member
		SET 	member_pass = #{member_pass},
				member_name = #{member_name},
				member_email = #{member_email,jdbcType=VARCHAR},
				member_phone = #{member_phone},
				member_mileage = #{member_mileage},
				member_grade = #{member_grade},
				member_address = #{member_address},
				member_birthday = #{member_birthday}
		WHERE 	member_id =	#{member_id}
	</update>	
	
	<update id="delete">
		UPDATE 	member
		SET 	member_grade = -1
		WHERE 	member_id =	#{member_id}
	</update>
	
</mapper>
